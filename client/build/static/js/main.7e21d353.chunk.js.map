{"version":3,"sources":["components/Header.jsx","context/actions.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/BalanceComponent.jsx","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.jsx","components/AddTransaction.jsx","App.js","index.js"],"names":["Header","className","deleteTransactionAction","id","a","axios","delete","type","payload","console","log","res","data","error","addTransactionAction","transaction","config","post","editTransactionAction","getTransactionsAction","get","appReducer","state","loading","transactions","filter","_id","editId","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","deleteTransaction","addTransaction","editTransaction","getTransactions","Provider","value","numberWithCommas","x","toString","replace","BalanceComponent","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","expenseAdder","Math","abs","Transaction","text","sign","isExpenseclass","onClick","TransactionList","useEffect","AddTransaction","useState","setText","setAmount","setError","find","onSubmit","e","preventDefault","newTransaction","floor","random","setTimeout","style","display","htmlFor","placeholder","onChange","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAUeA,EARA,WACb,OACE,oBAAI,cAAY,SAASC,UAAU,SAAnC,8B,sDCFSC,EAAuB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,+EAE7BC,IAAMC,OAAN,+BAAqCH,IAFR,gCAG5B,CACLI,KAAM,qBACNC,QAASL,IALwB,uCAQnCM,QAAQC,IAAR,MARmC,kBAU5B,CACLH,KAAM,oBACNC,QAAS,KAAIG,IAAIC,KAAKC,QAZW,yDAAH,sDAiBvBC,EAAoB,uCAAG,WAAOC,GAAP,mBAAAX,EAAA,6DAC5BY,EAAS,CACb,eAAgB,oBAFgB,kBAMTX,IAAMY,KAC3B,uBACAF,EACAC,GAT8B,uBAMxBJ,EANwB,EAMxBA,KANwB,kBAWzB,CACLL,KAAM,kBACNC,QAASI,EAAKA,OAbgB,yDAgBzB,CACLL,KAAM,oBACNC,QAAS,KAAIG,IAAIC,KAAKC,QAlBQ,yDAAH,sDAuBpBK,EAAwB,SAACf,GAAD,MAAS,CAC5CI,KAAM,mBACNC,QAASL,IAGEgB,EAAqB,uCAAG,8BAAAf,EAAA,+EAEVC,IAAMe,IAAI,wBAFA,uBAEzBR,EAFyB,EAEzBA,KAFyB,kBAG1B,CACLL,KAAM,kBACNC,QAASI,EAAKA,OALiB,yDAQ1B,CACLL,KAAM,oBACNC,QAAS,KAAIG,IAAIC,KAAKC,QAVS,yDAAH,qD,eCPnBQ,EAxCI,SAACC,EAAD,GAA+B,IAArBf,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACjC,OAAQD,GACN,IAAK,kBACH,OAAO,2BACFe,GADL,IAEEC,SAAS,EACTC,aAAchB,IAGlB,IAAK,qBACH,OAAO,2BACFc,GADL,IAEEE,aAAcF,EAAME,aAAaC,QAC/B,SAACV,GAAD,OAAiBA,EAAYW,MAAQlB,OAG3C,IAAK,kBACH,OAAO,2BACFc,GADL,IAEEE,aAAa,GAAD,mBAAMF,EAAME,cAAZ,CAA0BhB,MAG1C,IAAK,mBACH,OAAO,2BACFc,GADL,IAEEK,OAAQnB,IAGZ,IAAK,oBACH,OAAO,2BACFc,GADL,IAEEC,SAAS,EACTV,MAAOL,IAGX,QACE,OAAOc,IC1BPM,EAAe,CACnBJ,aAAc,GACdG,OAAQ,EACRd,MAAO,KACPU,SAAS,GAIEM,EAAgBC,wBAAcF,GAG9BG,EAAiB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC/B,EAA0BC,qBAAWZ,EAAYO,GAAjD,mBAAON,EAAP,KAAcY,EAAd,KACMC,EAAiB,uCAAG,WAAOhC,GAAP,SAAAC,EAAA,kEACxB8B,EADwB,SACThC,EAAwBC,GADf,6EAAH,sDAIjBiC,EAAc,uCAAG,WAAOrB,GAAP,SAAAX,EAAA,kEACrB8B,EADqB,SACNpB,EAAqBC,GADf,6EAAH,sDAIdsB,EAAe,uCAAG,WAAOlC,GAAP,SAAAC,EAAA,kEACtB8B,EADsB,SACPhB,EAAsBf,GADf,6EAAH,sDAIfmC,EAAe,uCAAG,sBAAAlC,EAAA,kEACtB8B,EADsB,SACPf,IADO,6EAAH,qDAIrB,OASE,aARA,CAQCU,EAAcU,SAAf,CACEC,MAAO,CACLhB,aAAcF,EAAME,aACpBG,OAAQL,EAAMK,OACdQ,oBACAC,iBACAC,kBACAd,QAASD,EAAMC,QACfe,mBARJ,SAWGN,KC3DMS,EAAmB,SAACC,GAC/B,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,MCoBxCC,EAjBU,WACvB,IAEMC,EAFmBC,qBAAWlB,GAA5BL,aACqBwB,KAAI,SAACjC,GAAD,OAAiBA,EAAYkC,UACxCC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAEtE,OACE,sBAAK,cAAY,UAAjB,UACE,oBAAI,cAAY,gBAAhB,0BACA,oBAAI,cAAY,gBAAgBlD,GAAG,UAAnC,SACG2C,EAAQ,EAAR,WACOL,EAAiBK,IADxB,YAEQL,GAAkBK,UCkBpBQ,EA7BQ,WACrB,IACMC,EADmBR,qBAAWlB,GAA5BL,aACqBwB,KAAI,SAACjC,GAAD,OAAiBA,EAAYkC,UAExDO,EAAqBD,EFFxB9B,QAAO,SAAC2B,GAAD,OAAUA,EAAO,KACxBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GACrCC,QAAQ,GECLI,EFEoB,SAACR,GAC3B,OAAOA,EACJxB,QAAO,SAAC2B,GAAD,OAAUA,GAAQ,KACzBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GACrCC,QAAQ,GENKK,CAAaH,GAE7B,OACE,sBAAKtD,UAAU,oBAAf,UACE,gCACE,oBAAI,cAAY,gBAAhB,oBACA,oBAAGA,UAAU,aAAa,cAAY,eAAtC,cAKIwC,EAAiBe,SAGvB,gCACE,yCACA,oBAAG,cAAY,gBAAgBvD,UAAU,cAAzC,eACKwC,EAAiBkB,KAAKC,IAAIH,cCGxBI,EAzBK,SAAC,GAA4C,IAAD,IAAzC9C,YAAekC,EAA0B,EAA1BA,OAAQa,EAAkB,EAAlBA,KAAMpC,EAAY,EAAZA,IAClD,EAA+CqB,qBAAWlB,GAAlDM,EAAR,EAAQA,kBAAmBE,EAA3B,EAA2BA,gBACrB0B,EAAOd,EAAS,EAAI,IAAM,GAC1Be,EAAiBf,EAAS,EAAI,QAAU,OAE9C,OACE,qBAAIhD,UAAW+D,EAAgB,wBAAgBtC,GAA/C,UACE,wBAAQzB,UAAU,WAAWgE,QAAS,kBAAM5B,EAAgBX,IAA5D,kBAGCoC,EAAM,IACP,iCACGC,EADH,IACUtB,EAAiBkB,KAAKC,IAAIX,OAEpC,wBACE,cAAY,aACZhD,UAAU,aACVgE,QAAS,kBAAM9B,EAAkBT,IAHnC,mBCISwC,EAlBS,WACtB,MAA0CnB,qBAAWlB,GAA7CL,EAAR,EAAQA,aAAcc,EAAtB,EAAsBA,gBAKtB,OAJA6B,qBAAU,WACR7B,MACC,IAGD,qCACE,yCACA,oBAAInC,GAAG,OAAO,cAAY,mBAAmBF,UAAU,OAAvD,SACGuB,EAAawB,KAAI,SAACjC,GAAD,OAChB,cAAC,EAAD,CAAmCA,YAAaA,GAA9BA,EAAYW,cCuEzB0C,EAnFQ,WACrB,MACErB,qBAAWlB,GADLO,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,gBAAiBV,EAAzC,EAAyCA,OAAQQ,EAAjD,EAAiDA,kBAEzCX,EAAiBuB,qBAAWlB,GAA5BL,aACR,EAAwB6C,mBAAS,IAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAA4BD,mBAAS,GAArC,mBAAOpB,EAAP,KAAesB,EAAf,KACA,EAA0BF,oBAAS,GAAnC,mBAAOxD,EAAP,KAAc2D,EAAd,KAEAL,qBAAU,WACR,IAAMpD,EAAcS,EAAaiD,MAC/B,SAAC1D,GAAD,OAAiBA,EAAYW,MAAQC,KAGnCZ,IACFuD,EAAQvD,EAAY+C,MACpBS,EAAUxD,EAAYkC,QACtBd,EAAkBR,MAEnB,CAACA,EAAQH,EAAcW,IAkB1B,OACE,mCACE,sBAAK,cAAY,kBAAjB,UACGR,EAAS,kDAA4B,qDACtC,uBAAM1B,UAAU,OAAOyE,SAnBZ,SAACC,GAChBA,EAAEC,iBACF,IAAMC,EAAiB,CACrB1E,GAAIwB,GAAkBgC,KAAKmB,MAAsB,IAAhBnB,KAAKoB,UACtCjB,OACAb,QAASA,GAEXa,GAAQb,EAASb,EAAeyC,GAAkBL,GAAS,GAE3DQ,YAAW,kBAAMR,GAAS,KAAQ,KAClCnC,EAAgB,GAChBkC,EAAU,GACVD,EAAQ,KAOJ,UACE,qBACErE,UAAU,QACVgF,MAAO,CAAEC,QAAQ,GAAD,OAAMrE,EAAiB,QAAT,SAFhC,uCAMA,sBAAKZ,UAAU,eAAf,UACE,uBAAOkF,QAAQ,OAAf,kBACA,uBACE3C,MAAOsB,EACPvD,KAAK,OACLJ,GAAG,OACHiF,YAAY,gBACZC,SAAU,SAACV,GAAD,OAAOL,EAAQK,EAAEW,OAAO9C,aAItC,sBAAKvC,UAAU,eAAf,UACE,wBAAOkF,QAAQ,SAAf,oBACS,uBADT,wCAIA,uBACE3C,MAAOS,EACPoC,SAAU,SAACV,GAAD,OAAOJ,EAAUI,EAAEW,OAAO9C,QACpCjC,KAAK,SACLJ,GAAG,SACHiF,YAAY,uBAIfzD,EACC,wBAAQ1B,UAAU,MAAlB,qCAEA,wBAAQA,UAAU,MAAlB,sCCxDGsF,EAdH,WACV,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,sBAAKtF,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,WCXRuF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7e21d353.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <h1 data-testid=\"header\" className=\"header\">\r\n      Expense Tracker\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nexport const deleteTransactionAction = async (id) => {\r\n  try {\r\n    await axios.delete(`/api/v1/transactions/${id}`);\r\n    return {\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    };\r\n  } catch (err) {\r\n    console.log(err);\r\n\r\n    return {\r\n      type: \"TRANSACTION_ERROR\",\r\n      payload: err.res.data.error,\r\n    };\r\n  }\r\n};\r\n\r\nexport const addTransactionAction = async (transaction) => {\r\n  const config = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  try {\r\n    const { data } = await axios.post(\r\n      \"/api/v1/transactions\",\r\n      transaction,\r\n      config\r\n    );\r\n    return {\r\n      type: \"ADD_TRANSACTION\",\r\n      payload: data.data,\r\n    };\r\n  } catch (err) {\r\n    return {\r\n      type: \"TRANSACTION_ERROR\",\r\n      payload: err.res.data.error,\r\n    };\r\n  }\r\n};\r\n\r\nexport const editTransactionAction = (id) => ({\r\n  type: \"EDIT_TRANSACTION\",\r\n  payload: id,\r\n});\r\n\r\nexport const getTransactionsAction = async () => {\r\n  try {\r\n    const { data } = await axios.get(\"/api/v1/transactions\");\r\n    return {\r\n      type: \"GET_TRANSACTION\",\r\n      payload: data.data,\r\n    };\r\n  } catch (err) {\r\n    return {\r\n      type: \"TRANSACTION_ERROR\",\r\n      payload: err.res.data.error,\r\n    };\r\n  }\r\n};\r\n","const appReducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case \"GET_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        transactions: payload,\r\n      };\r\n\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction._id !== payload\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, payload],\r\n      };\r\n\r\n    case \"EDIT_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        editId: payload,\r\n      };\r\n\r\n    case \"TRANSACTION_ERROR\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import { createContext, useReducer } from \"react\";\r\nimport {\r\n  addTransactionAction,\r\n  deleteTransactionAction,\r\n  editTransactionAction,\r\n  getTransactionsAction,\r\n} from \"./actions\";\r\nimport appReducer from \"./AppReducer\";\r\n\r\n//initial state\r\nconst initialState = {\r\n  transactions: [],\r\n  editId: 0,\r\n  error: null,\r\n  loading: true,\r\n};\r\n\r\n//create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n  const deleteTransaction = async (id) => {\r\n    dispatch(await deleteTransactionAction(id));\r\n  };\r\n\r\n  const addTransaction = async (transaction) => {\r\n    dispatch(await addTransactionAction(transaction));\r\n  };\r\n\r\n  const editTransaction = async (id) => {\r\n    dispatch(await editTransactionAction(id));\r\n  };\r\n\r\n  const getTransactions = async () => {\r\n    dispatch(await getTransactionsAction());\r\n  };\r\n\r\n  return (\r\n    /**\r\n     * Facade pattern used here\r\n     * with this users of context will\r\n     * only use GlobalContextProvider to have\r\n     * access to various actions and context state\r\n     * with out accessing each function individually\r\n     *\r\n     */\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        editId: state.editId,\r\n        deleteTransaction,\r\n        addTransaction,\r\n        editTransaction,\r\n        loading: state.loading,\r\n        getTransactions,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","export const numberWithCommas = (x) => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\n\r\nexport const incomeAdder = (amount) => {\r\n  return amount\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n};\r\n\r\nexport const expenseAdder = (amount) => {\r\n  return amount\r\n    .filter((item) => item < -1)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { numberWithCommas } from \"../utils/format\";\r\n\r\nconst BalanceComponent = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <div data-testid=\"balance\">\r\n      <h4 data-testid=\"balance-title\">Your Balance</h4>\r\n      <h1 data-testid=\"balance-value\" id=\"balance\">\r\n        {total > 0\r\n          ? `$${numberWithCommas(total)}`\r\n          : `-$${numberWithCommas(-total)}`}\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BalanceComponent;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { expenseAdder, incomeAdder, numberWithCommas } from \"../utils/format\";\r\n\r\nconst IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = incomeAdder(amounts);\r\n  const expense = expenseAdder(amounts);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4 data-testid=\"income-header\">Income</h4>\r\n        <p className=\"money plus\" data-testid=\"income-value\">\r\n          {/**\r\n           * Decorator pattern\r\n           *\r\n           */}\r\n          ${numberWithCommas(income)}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p data-testid=\"expense-value\" className=\"money minus\">\r\n          -${numberWithCommas(Math.abs(expense))}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpenses;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { numberWithCommas } from \"../utils/format\";\r\n\r\nconst Transaction = ({ transaction: { amount, text, _id } }) => {\r\n  const { deleteTransaction, editTransaction } = useContext(GlobalContext);\r\n  const sign = amount < 0 ? \"-\" : \"\";\r\n  const isExpenseclass = amount < 0 ? \"minus\" : \"plus\";\r\n\r\n  return (\r\n    <li className={isExpenseclass} data-testid={`${_id}`}>\r\n      <button className=\"edit-btn\" onClick={() => editTransaction(_id)}>\r\n        edit\r\n      </button>\r\n      {text}{\" \"}\r\n      <span>\r\n        {sign}${numberWithCommas(Math.abs(amount))}\r\n      </span>\r\n      <button\r\n        data-testid=\"delete-btn\"\r\n        className=\"delete-btn\"\r\n        onClick={() => deleteTransaction(_id)}\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport Transaction from \"./Transaction\";\r\n\r\nconst TransactionList = () => {\r\n  const { transactions, getTransactions } = useContext(GlobalContext);\r\n  useEffect(() => {\r\n    getTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul id=\"list\" data-testid=\"transaction-list\" className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction._id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst AddTransaction = () => {\r\n  const { addTransaction, editTransaction, editId, deleteTransaction } =\r\n    useContext(GlobalContext);\r\n  const { transactions } = useContext(GlobalContext);\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const transaction = transactions.find(\r\n      (transaction) => transaction._id === editId\r\n    );\r\n\r\n    if (transaction) {\r\n      setText(transaction.text);\r\n      setAmount(transaction.amount);\r\n      deleteTransaction(editId);\r\n    }\r\n  }, [editId, transactions, deleteTransaction]);\r\n  //assign transaction to the current form state\r\n\r\n  const onsubmit = (e) => {\r\n    e.preventDefault();\r\n    const newTransaction = {\r\n      id: editId ? editId : Math.floor(Math.random() * 1000000),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n    text && amount ? addTransaction(newTransaction) : setError(true);\r\n\r\n    setTimeout(() => setError(false), 3000);\r\n    editTransaction(0);\r\n    setAmount(0);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div data-testid=\"add-transaction\">\r\n        {editId ? <h3>Edit Transaction</h3> : <h3>Add new Transaction</h3>}\r\n        <form className=\"form\" onSubmit={onsubmit}>\r\n          <div\r\n            className=\"error\"\r\n            style={{ display: `${!error ? \"none\" : \"block\"}` }}\r\n          >\r\n            Please fill in all fields\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"text\">Text</label>\r\n            <input\r\n              value={text}\r\n              type=\"text\"\r\n              id=\"text\"\r\n              placeholder=\"Enter text...\"\r\n              onChange={(e) => setText(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"amount\">\r\n              Amount <br />\r\n              (negative-expense,positive-income)\r\n            </label>\r\n            <input\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              type=\"number\"\r\n              id=\"amount\"\r\n              placeholder=\"Enter amount...\"\r\n            />\r\n          </div>\r\n\r\n          {editId ? (\r\n            <button className=\"btn\">Submit transaction Edit</button>\r\n          ) : (\r\n            <button className=\"btn\">Add transaction</button>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\nimport BalanceComponent from \"./components/BalanceComponent\";\nimport IncomeExpenses from \"./components/IncomeExpenses\";\nimport TransactionList from \"./components/TransactionList\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport { GlobalProvider } from \"./context/GlobalState\";\nconst App = () => {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <BalanceComponent />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}