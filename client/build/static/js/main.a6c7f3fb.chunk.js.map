{"version":3,"sources":["context/actions.js","context/AppReducer.js","context/GlobalState.js","utils/format.js","components/BalanceComponent.jsx","components/IncomeExpenses.jsx","components/Transaction.jsx","components/TransactionList.jsx","components/AddTransaction.jsx","components/Header.jsx","Pages/Home.jsx","components/ProtectedRoute.jsx","Pages/Login.jsx","Pages/Signup.jsx","App.js","index.js"],"names":["deleteTransactionAction","id","a","userInfo","JSON","parse","localStorage","getItem","config","authorization","token","axios","delete","headers","type","payload","response","data","error","res","addTransactionAction","transaction","Authorization","post","editTransactionAction","getTransactionsAction","get","LoginUser","user","setItem","stringify","RegisterUser","LogoutUser","removeItem","appReducer","state","loading","transactions","filter","_id","editId","isAuth","name","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","deleteTransaction","addTransaction","editTransaction","getTransactions","loginUser","registerUser","logoutUser","Provider","value","clearError","numberWithCommas","x","toString","replace","BalanceComponent","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","expenseAdder","className","Math","abs","Transaction","text","sign","isExpenseclass","onClick","TransactionList","useEffect","AddTransaction","useState","setText","setAmount","setError","find","onSubmit","e","preventDefault","newTransaction","floor","random","setTimeout","style","display","htmlFor","placeholder","onChange","target","Header","navigate","useNavigate","alignItems","gap","marginTop","width","Home","ProtectedRoute","redirectPath","to","Login","textAlign","initialValues","email","password","validationSchema","Yup","required","values","setSubmitting","render","msg","Signup","firstName","lastName","max","min","App","showError","setShowError","clearTimeout","element","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6c7f3fb.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const deleteTransactionAction = async (id) => {\r\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n  const config = {\r\n    \"Content-Type\": \"application/json\",\r\n    authorization: `Bearer ${userInfo.token}`,\r\n  };\r\n\r\n  try {\r\n    await axios.delete(`/api/v1/transactions/${id}`, { headers: config });\r\n    return {\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    };\r\n  } catch (err) {\r\n    return {\r\n      type: \"TRANSACTION_ERROR\",\r\n      payload: err.response ? err.response.data.error : err.res.data.error,\r\n    };\r\n  }\r\n};\r\n\r\nexport const addTransactionAction = async (transaction) => {\r\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n  const config = {\r\n    Authorization: `Bearer ${userInfo.token}`,\r\n  };\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/api/v1/transactions\", transaction, {\r\n      headers: config,\r\n    });\r\n    return {\r\n      type: \"ADD_TRANSACTION\",\r\n      payload: data.data,\r\n    };\r\n  } catch (err) {\r\n    return {\r\n      type: \"TRANSACTION_ERROR\",\r\n      payload: err.response ? err.response.data.error : err.res.data.error,\r\n    };\r\n  }\r\n};\r\n\r\nexport const editTransactionAction = (id) => ({\r\n  type: \"EDIT_TRANSACTION\",\r\n  payload: id,\r\n});\r\n\r\nexport const getTransactionsAction = async () => {\r\n  const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n  const config = {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: `Bearer ${userInfo.token}`,\r\n  };\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/api/v1/transactions\", {\r\n      headers: config,\r\n    });\r\n    return {\r\n      type: \"GET_TRANSACTION\",\r\n      payload: data.data,\r\n    };\r\n  } catch (err) {\r\n    return {\r\n      type: \"TRANSACTION_ERROR\",\r\n      payload: err.response ? err.response.data.error : err.res.data.error,\r\n    };\r\n  }\r\n};\r\n\r\nexport const LoginUser = async (user) => {\r\n  const config = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/api/v1/users/login\", user, {\r\n      headers: config,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n    return {\r\n      type: \"USER_LOGIN\",\r\n      payload: data,\r\n    };\r\n  } catch (err) {\r\n    return {\r\n      type: \"USER_ERROR\",\r\n      payload: err.response.data.error,\r\n    };\r\n  }\r\n};\r\nexport const RegisterUser = async (user) => {\r\n  const config = {\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/api/v1/users\", user, {\r\n      headers: config,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n\r\n    return {\r\n      type: \"REGISTER_USER\",\r\n      payload: data,\r\n    };\r\n  } catch (err) {\r\n    return {\r\n      type: \"USER_ERROR\",\r\n      payload: err.response.data.error,\r\n    };\r\n  }\r\n};\r\n\r\nexport const LogoutUser = async () => {\r\n  try {\r\n    localStorage.removeItem(\"userInfo\");\r\n\r\n    return {\r\n      type: \"LOGOUT_USER\",\r\n    };\r\n  } catch (err) {\r\n    return {\r\n      type: \"USER_ERROR\",\r\n      payload: \"logout Failed\",\r\n    };\r\n  }\r\n};\r\n","const appReducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case \"GET_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        transactions: payload,\r\n      };\r\n\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction._id !== payload\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, payload],\r\n      };\r\n\r\n    case \"EDIT_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        editId: payload,\r\n      };\r\n\r\n    case \"TRANSACTION_ERROR\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n    case \"USER_ERROR\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n    case \"USER_LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...payload },\r\n      };\r\n    case \"REGISTER_USER\":\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n        isAuth: true,\r\n      };\r\n    case \"LOGOUT_USER\":\r\n      return {\r\n        ...state,\r\n        user: { name: \"\", token: \"\" },\r\n        transaction: [],\r\n        editId: 0,\r\n        error: null,\r\n      };\r\n    case \"CLEAR_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import { createContext, useReducer } from \"react\";\r\nimport {\r\n  addTransactionAction,\r\n  deleteTransactionAction,\r\n  editTransactionAction,\r\n  getTransactionsAction,\r\n  RegisterUser,\r\n  LoginUser,\r\n  LogoutUser,\r\n} from \"./actions\";\r\nimport appReducer from \"./AppReducer\";\r\n\r\n//initial state\r\nconst initialState = {\r\n  transactions: [],\r\n  editId: 0,\r\n  error: null,\r\n  loading: true,\r\n  user: localStorage.getItem(\"userInfo\")\r\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n    : { token: \"\", name: \"\" },\r\n};\r\n\r\n//create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n  const deleteTransaction = async (id) => {\r\n    dispatch(await deleteTransactionAction(id));\r\n  };\r\n\r\n  const addTransaction = async (transaction) => {\r\n    dispatch(await addTransactionAction(transaction));\r\n  };\r\n\r\n  const editTransaction = async (id) => {\r\n    dispatch(await editTransactionAction(id));\r\n  };\r\n\r\n  const getTransactions = async () => {\r\n    dispatch(await getTransactionsAction());\r\n  };\r\n\r\n  const loginUser = async (user) => {\r\n    dispatch(await LoginUser(user));\r\n  };\r\n  const registerUser = async (user) => {\r\n    dispatch(await RegisterUser(user));\r\n  };\r\n  const logoutUser = async () => {\r\n    dispatch(await LogoutUser());\r\n  };\r\n\r\n  const clearError = () => {\r\n    dispatch({\r\n      type: \"CLEAR_ERROR\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    /**\r\n     * Facade pattern used here\r\n     * with this users of context will\r\n     * only use GlobalContextProvider to have\r\n     * access to various actions and context state\r\n     * with out accessing each function individually\r\n     *\r\n     */\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        editId: state.editId,\r\n        deleteTransaction,\r\n        addTransaction,\r\n        editTransaction,\r\n        loading: state.loading,\r\n        getTransactions,\r\n        loginUser,\r\n        logoutUser,\r\n        registerUser,\r\n        user: state.user,\r\n        error: state.error,\r\n        clearError,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","export const numberWithCommas = (x) => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\n\r\nexport const incomeAdder = (amount) => {\r\n  return amount\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n};\r\n\r\nexport const expenseAdder = (amount) => {\r\n  return amount\r\n    .filter((item) => item < -1)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { numberWithCommas } from \"../utils/format\";\r\n\r\nconst BalanceComponent = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <div data-testid=\"balance\">\r\n      <h4 data-testid=\"balance-title\">Your Balance</h4>\r\n      <h1 data-testid=\"balance-value\" id=\"balance\">\r\n        {total > 0\r\n          ? `$${numberWithCommas(total)}`\r\n          : `-$${numberWithCommas(-total)}`}\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BalanceComponent;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { expenseAdder, incomeAdder, numberWithCommas } from \"../utils/format\";\r\n\r\nconst IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = incomeAdder(amounts);\r\n  const expense = expenseAdder(amounts);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4 data-testid=\"income-header\">Income</h4>\r\n        <p className=\"money plus\" data-testid=\"income-value\">\r\n          {/**\r\n           * Decorator pattern\r\n           *\r\n           */}\r\n          ${numberWithCommas(income)}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p data-testid=\"expense-value\" className=\"money minus\">\r\n          -${numberWithCommas(Math.abs(expense))}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpenses;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { numberWithCommas } from \"../utils/format\";\r\n\r\nconst Transaction = ({ transaction: { amount, text, _id } }) => {\r\n  const { deleteTransaction, editTransaction } = useContext(GlobalContext);\r\n  const sign = amount < 0 ? \"-\" : \"\";\r\n  const isExpenseclass = amount < 0 ? \"minus\" : \"plus\";\r\n\r\n  return (\r\n    <li className={isExpenseclass} data-testid={`${_id}`}>\r\n      <button className=\"edit-btn\" onClick={() => editTransaction(_id)}>\r\n        edit\r\n      </button>\r\n      {text}{\" \"}\r\n      <span>\r\n        {sign}${numberWithCommas(Math.abs(amount))}\r\n      </span>\r\n      <button\r\n        data-testid=\"delete-btn\"\r\n        className=\"delete-btn\"\r\n        onClick={() => deleteTransaction(_id)}\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport Transaction from \"./Transaction\";\r\n\r\nconst TransactionList = () => {\r\n  const { transactions, getTransactions } = useContext(GlobalContext);\r\n  useEffect(() => {\r\n    getTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul id=\"list\" data-testid=\"transaction-list\" className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction._id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst AddTransaction = () => {\r\n  const { addTransaction, editTransaction, editId, deleteTransaction } =\r\n    useContext(GlobalContext);\r\n  const { transactions } = useContext(GlobalContext);\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const transaction = transactions.find(\r\n      (transaction) => transaction._id === editId\r\n    );\r\n\r\n    if (transaction) {\r\n      setText(transaction.text);\r\n      setAmount(transaction.amount);\r\n      deleteTransaction(editId);\r\n    }\r\n  }, [editId, transactions, deleteTransaction]);\r\n  //assign transaction to the current form state\r\n\r\n  const onsubmit = (e) => {\r\n    e.preventDefault();\r\n    const newTransaction = {\r\n      id: editId ? editId : Math.floor(Math.random() * 1000000),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n    text && amount ? addTransaction(newTransaction) : setError(true);\r\n\r\n    setTimeout(() => setError(false), 3000);\r\n    editTransaction(0);\r\n    setAmount(0);\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div data-testid=\"add-transaction\">\r\n        {editId ? <h3>Edit Transaction</h3> : <h3>Add new Transaction</h3>}\r\n        <form className=\"form\" onSubmit={onsubmit}>\r\n          <div\r\n            className=\"error\"\r\n            style={{ display: `${!error ? \"none\" : \"block\"}` }}\r\n          >\r\n            Please fill in all fields\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"text\">Text</label>\r\n            <input\r\n              value={text}\r\n              type=\"text\"\r\n              id=\"text\"\r\n              placeholder=\"Enter text...\"\r\n              onChange={(e) => setText(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"amount\">\r\n              Amount <br />\r\n              (negative-expense,positive-income)\r\n            </label>\r\n            <input\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              type=\"number\"\r\n              id=\"amount\"\r\n              placeholder=\"Enter amount...\"\r\n            />\r\n          </div>\r\n\r\n          {editId ? (\r\n            <button className=\"btn\">Submit transaction Edit</button>\r\n          ) : (\r\n            <button className=\"btn\">Add transaction</button>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Header = () => {\r\n  const { logoutUser, user } = useContext(GlobalContext);\r\n  const navigate = useNavigate();\r\n  const handleLogout = (e) => {\r\n    e.preventDefault();\r\n    logoutUser();\r\n    navigate(\"/\");\r\n  };\r\n  return (\r\n    <>\r\n      <h1 data-testid=\"header\" className=\"header\">\r\n        Expense Tracker\r\n      </h1>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"baseline\",\r\n          gap: \"1rem\",\r\n          marginTop: \"10px\",\r\n        }}\r\n      >\r\n        <h4>Hello,{user?.name}</h4>\r\n        <div style={{ width: \"60%\" }}>\r\n          <button className=\"btn\" onClick={handleLogout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import BalanceComponent from \"../components/BalanceComponent\";\r\nimport IncomeExpenses from \"../components/IncomeExpenses\";\r\nimport TransactionList from \"../components/TransactionList\";\r\nimport AddTransaction from \"../components/AddTransaction\";\r\nimport Header from \"../components/Header\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"container\">\r\n        <BalanceComponent />\r\n        <IncomeExpenses />\r\n        <TransactionList />\r\n        <AddTransaction />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Navigate, Outlet } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst ProtectedRoute = ({ children, redirectPath = \"/login\" }) => {\r\n  const {\r\n    user: { token },\r\n  } = useContext(GlobalContext);\r\n  if (!token) {\r\n    return <Navigate to={redirectPath} replace />;\r\n  }\r\n\r\n  return children ? children : <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Login = () => {\r\n  const { loginUser, user } = useContext(GlobalContext);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (user.token) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [navigate, user.token]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 style={{ textAlign: \"center\" }}>Login Form</h1>\r\n      <Formik\r\n        initialValues={{ email: \"\", password: \"\" }}\r\n        validationSchema={Yup.object({\r\n          password: Yup.string().required(\"Required\"),\r\n          email: Yup.string()\r\n            .email(\"Invalid email address\")\r\n            .required(\"Required\"),\r\n        })}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          await loginUser(values);\r\n          setSubmitting(false);\r\n          navigate(\"/\");\r\n        }}\r\n      >\r\n        <Form>\r\n          <label htmlFor=\"email\">Email Address</label>\r\n          <Field name=\"email\" type=\"text\" />\r\n          <ErrorMessage\r\n            name=\"email\"\r\n            className=\"error\"\r\n            render={(msg) => <div className=\"error-form\">{msg}</div>}\r\n          />\r\n\r\n          <label htmlFor=\"password\">Password</label>\r\n          <Field name=\"password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"password\"\r\n            className=\"error\"\r\n            render={(msg) => <div className=\"error-form\">{msg}</div>}\r\n          />\r\n\r\n          <button type=\"submit\" className=\"btn\">\r\n            Login\r\n          </button>\r\n        </Form>\r\n      </Formik>\r\n      <div>\r\n        Don't Have an Account? <Link to=\"/register\">Register here</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Signup = () => {\r\n  const { registerUser, user } = useContext(GlobalContext);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (user.token) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [navigate, user.token]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 style={{ textAlign: \"center\" }}>Register Form</h1>\r\n      <Formik\r\n        initialValues={{ firstName: \"\", lastName: \"\", email: \"\", password: \"\" }}\r\n        validationSchema={Yup.object({\r\n          firstName: Yup.string()\r\n            .max(15, \"Must be 15 characters or less\")\r\n            .required(\"Required\"),\r\n          lastName: Yup.string()\r\n            .max(20, \"Must be 20 characters or less\")\r\n            .required(\"Required\"),\r\n          password: Yup.string()\r\n            .min(6, \"Must be 6 characters or more\")\r\n            .required(\"Required\"),\r\n          email: Yup.string()\r\n            .email(\"Invalid email address\")\r\n            .required(\"Required\"),\r\n        })}\r\n        onSubmit={async (values, { setSubmitting }) => {\r\n          await registerUser({\r\n            email: values.email,\r\n            name: `${values.lastName + \" \" + values.firstName}`,\r\n            password: values.password,\r\n          });\r\n          setSubmitting(false);\r\n          navigate(\"/\");\r\n        }}\r\n      >\r\n        <Form>\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n          <Field name=\"firstName\" type=\"text\" />\r\n          <ErrorMessage\r\n            name=\"firstName\"\r\n            className=\"error\"\r\n            render={(msg) => <div className=\"error-form\">{msg}</div>}\r\n          />\r\n\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n          <Field name=\"lastName\" type=\"text\" />\r\n          <ErrorMessage\r\n            name=\"lastName\"\r\n            className=\"error\"\r\n            render={(msg) => <div className=\"error-form\">{msg}</div>}\r\n          />\r\n\r\n          <label htmlFor=\"email\">Email Address</label>\r\n          <Field name=\"email\" type=\"text\" />\r\n          <ErrorMessage\r\n            name=\"email\"\r\n            className=\"error\"\r\n            render={(msg) => <div className=\"error-form\">{msg}</div>}\r\n          />\r\n\r\n          <label htmlFor=\"lastName\">Password</label>\r\n          <Field name=\"password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"password\"\r\n            className=\"error\"\r\n            render={(msg) => <div className=\"error-form\">{msg}</div>}\r\n          />\r\n\r\n          <button type=\"submit\" className=\"btn\">\r\n            Register\r\n          </button>\r\n        </Form>\r\n      </Formik>\r\n\r\n      <div>\r\n        Already Have an Account? <Link to=\"/login\">Login here</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Signup;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./Pages/Home\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\nimport Login from \"./Pages/Login\";\r\nimport Signup from \"./Pages/Signup\";\r\nimport { GlobalContext } from \"./context/GlobalState\";\r\n\r\nconst App = () => {\r\n  const [showError, setShowError] = useState(false);\r\n  const { error, clearError } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    error && setShowError(true);\r\n    setTimeout(() => {\r\n      setShowError(false);\r\n      clearError();\r\n    }, 5000);\r\n\r\n    return () => clearTimeout();\r\n  }, [error, clearError]);\r\n  return (\r\n    <>\r\n      {showError ? (\r\n        <div className=\"error\" style={{ textAlign: \"center\" }}>\r\n          {error}\r\n        </div>\r\n      ) : null}\r\n      <Routes>\r\n        <Route element={<ProtectedRoute />}>\r\n          <Route path=\"/\" element={<Home />} />\r\n        </Route>\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/register\" element={<Signup />} />\r\n        <Route path=\"*\" element={<div>Page Not Found</div>} />\r\n      </Routes>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport { GlobalProvider } from \"./context/GlobalState\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalProvider>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </GlobalProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}